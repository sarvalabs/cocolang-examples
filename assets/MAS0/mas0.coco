coco asset MAS0

// DefineAsset has to be customized for the asset
endpoint invoke DefineAsset():
    asset.Define(
        symbol: "MOI",
        decimals: 2,
        manager: Sender,
        max_supply: U256(10000),
        enable_events: true,
    )

event AssetEvent:
    topic operation String
    field operator Identifier
    field benefactor Identifier
    field beneficiary Identifier
    field amount U256
    field expires_at U64

endpoint Transfer(beneficiary Identifier, amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Transfer", operator: Sender, benefactor: Sender,
            beneficiary: beneficiary, amount: amount}
    asset.Transfer(token_id: 0, beneficiary, amount)

endpoint TransferFrom(benefactor, beneficiary Identifier, amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "TransferFrom", operator: Sender, benefactor: benefactor,
            beneficiary: beneficiary, amount: amount}
    asset.TransferFrom(token_id: 0, benefactor, beneficiary, amount)

endpoint Mint(beneficiary Identifier, amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Mint", operator: Sender, beneficiary: beneficiary,
            amount: amount}
    asset.Mint(token_id: 0, beneficiary, amount)

endpoint Burn(amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Burn", operator: Sender, benefactor: Sender,
            amount: amount}
    asset.Burn(token_id: 0, amount)

endpoint Lockup(beneficiary Identifier, amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Lockup", operator: Sender, benefactor: Sender,
            beneficiary: beneficiary, amount: amount}
    asset.Lockup(token_id: 0, beneficiary, amount)

endpoint Release(benefactor, beneficiary Identifier, amount U256):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Release", operator: Sender, benefactor: benefactor,
            beneficiary: beneficiary, amount: amount}
    asset.Release(token_id: 0, benefactor, beneficiary, amount)

endpoint Approve(beneficiary Identifier, amount U256, expires_at U64):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Approve", operator: Sender, benefactor: Sender,
            beneficiary: beneficiary, amount: amount, expires_at: expires_at}
    asset.Approve(token_id: 0,  beneficiary, amount, expires_at)

endpoint Revoke(beneficiary Identifier):
    if asset.EnableEvents():
        emit AssetEvent{operation: "Revoke", operator: Sender, benefactor: Sender,
            beneficiary: beneficiary}
    asset.Revoke(token_id: 0, beneficiary)

// Getters

endpoint Symbol() -> (symbol String):
    symbol = asset.Symbol()

endpoint BalanceOf(address Identifier) -> (balance U256):
    balance = asset.BalanceOf(token_id: 0, address)
