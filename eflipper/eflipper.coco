// A simple logic with an internal boolean state
// that can be flipped, retrieved and modified.
coco Eflipper

// The persistent state is used to define stateful
// values managed intrinsically by the logic. Each Sender
// has there own state.
state ephemeral:
    value Bool

// Init() deploy is a constructor that initializes the persitent state
// variables to their default values at the deploy time. 
endpoint enlist Init():
    pass

// Get() is an invoke that returns 
// the current value of the logic state
endpoint invoke readonly Get() -> (value Bool):
    observe value <- Sender.Eflipper.value

// Set() is an invoke that sets 
// the given value to the logic state
endpoint invoke ephemeral Set(value Bool):
    set(value: value)

// Toggle() is an invoke that flips 
// the current value of the logic state
endpoint invoke ephemeral Toggle():
    mutate value <- Sender.Eflipper.value:
        value = !value

// set() is a local function that 
// sets given value to the logic state
func ephemeral set(value Bool):
    mutate value -> Sender.Eflipper.value
